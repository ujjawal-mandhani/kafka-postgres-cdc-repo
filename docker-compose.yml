version: "3"
services:
  zookeeper:
    image: debezium/zookeeper
    container_name: zookeeper
    # volumes:
    #   - ./zookeeper-data/data:/zookeeper/data
    #   - ./zookeeper-data/logs:/zookeeper/logs
    ports:
      - 2181:2181
    networks:
      - kafka-cdc-network

  kafka:
    image: debezium/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      ZOOKEEPER_CONNECT: zookeeper:2181
    # volumes:
    #   - ./kafka/data:/kafka/data:ro
    #   - ./kafka/logs:/kafka/logs:ro
    networks:
      - kafka-cdc-network

  postgres:
    build: ./postgres
    container_name: postgres
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres_user
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - ./postgres/postgres_data:/var/lib/postgresql/data
    networks:
      - kafka-cdc-network

  python-cont:
    build: ./app
    container_name: python_312
    networks:
      - kafka-cdc-network

  akhq:
    image: tchiotludo/akhq:latest
    restart: unless-stopped
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
              schema-registry:
                url: "http://schema-registry:8085"
              connect:
                - name: "connect"
                  url: "http://host.docker.internal:8083"
    networks:
      - kafka-cdc-network
    ports:
      - 10018:8080

  postgres-connector:
    image: debezium/connect
    container_name: postgres-debezium
    ports:
      - 9090:8083
    depends_on:
      - kafka
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=pg
      - CONFIG_STORAGE_TOPIC=pg_connect_configs
      - OFFSET_STORAGE_TOPIC=pg_connect_offsets
      - STATUS_STORAGE_TOPIC=pg_connect_statuses
    networks:
      - kafka-cdc-network
    # volumes:
    #   - ./debezium-connect-data/data:/kafka/data
    #   - ./debezium-connect-data/logs:/kafka/logs

networks:
  kafka-cdc-network:
    driver: bridge
